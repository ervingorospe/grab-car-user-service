name: CI/CD Pipeline - User Service

on:
  push:
    paths:
      - '**'
    branches:
      - main

env:
  GKE_NAMESPACE: 'grab-car'
  IMAGE_NAME: '${{ secrets.DOCKER_USERNAME }}/grabcar-user-service'

jobs:
  build:
    runs-on: ubuntu-latest
    environment: 'development'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 23
        uses: actions/setup-java@v4
        with:
          java-version: '23'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean install -DskipTests
        working-directory: .

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest

      - name: Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

      - name: Set Image Tag for Deployment
        run: |
          export IMAGE_TAG=${{ github.sha }}
          envsubst < k8s/deployment.yml > k8s/deployment-updated.yml
          mv k8s/deployment-updated.yml k8s/deployment.yml
          echo "Updated deployment.yml:"
          cat k8s/deployment.yml

      - name: Upload Deployment Manifest
        uses: actions/upload-artifact@v4
        with:
          name: deployment-manifest
          path: k8s/deployment.yml

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: 'development'

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout'
        uses: 'actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332'

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      - name: Set Project
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}

      - name: Add Google Cloud SDK distribution URI as package source
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get install apt-transport-https ca-certificates gnupg
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -

      - name: Update package list
        run: sudo apt-get update -y

      - name: Install GKE Auth Plugin
        run: sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

      - name: Download Updated Deployment Manifest
        uses: actions/download-artifact@v4
        with:
          name: deployment-manifest
          path: k8s

      - name: Debug Deployment YAML
        run: cat k8s/deployment.yml

      - name: Deploy to GKE
        run: |
          kubectl get namespace $GKE_NAMESPACE || kubectl create namespace $GKE_NAMESPACE
          kubectl apply -f k8s/deployment.yml -n $GKE_NAMESPACE
          kubectl rollout restart deployment grab-api-gateway -n $GKE_NAMESPACE